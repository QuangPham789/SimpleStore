# GraphQL schema example
#
# https://gqlgen.com/getting-started/
#

type Accounts {
  id: Int!
  username: String!
  password: Int!
  order: [Order!]!
}

type Product {
	id:          Int!
	code:        String!
	name:        String!
	description: String!
	price:       String!      
}

type Item {
	id:         Int!
	code:       String!
  productid:  Int!
	unit:       Int!
	price:      String!      
	total:      String!      
  order: Order!
}

type Order {
	id:         Int!
  # itemid: Int!     
	items: [Item!]           
	total: Int!     
  account: Account!       
}


type Query {
  Accounts: [Accounts!]!
  AccountByID(id: Int!): Accounts!
  Products: [Product!]!
  ProductByCode(code: String!): Product!

  Items: [Item!]
  ItemByOrderID(id: Int!):[Item!]
  Orders: [Order!]
  OrderByAccountId: Order!

}

input NewAccount {
  username: String!
  password: Int!
}

input UpdateAccountModel {
  id: Int!
  username: String!
  password: Int!
}

input NewProduct{
  code: String!
  name: String!
  description: String!
	price: String!   
  category: String!
}

input UpdateProductModel{
  id: Int!
  code: String!
  name: String!
  description: String!
	price: String!   
  category: String!
}

input NewItem{
  code:       String!
  productid:  Int!
	unit:       Int!
	price:      String!      
	total:      String!      
}

input Item{
  id: Int!
  code:       String!
  productid:  Int!
	unit:       Int!
	price:      String!      
	total:      String!      
}

input NewOrder{
  accountid: Int!     
	items: [Item!]           
	total: Int!       
}

input UpdateOrderModel{
  id: Int!  
	items: [Item!]           
	total: Int!         
}

type Mutation {
  createAccount(input: NewAccount!): Accounts!
  updateAccount(input: UpdateAccountModel!): Accounts!
  deleteAccount(id: Int!): Accounts!
  createProduct(input: NewProduct!): Product!
  updateProduct(input: UpdateProductModel!): Product!
  deleteProduct(id: Int!): Product!
  createItem(input: NewItem!) : Item!
  updateItem(input: Item!) : Item!
  deleteItem(id: Int!): Item!
  createOrder(input: NewOrder!) : Order!
  updateOrder(input: UpdateOrderModel!) : Order!
  deleteOrder(id: Int!): Order!
}
